// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging.proto

package com.technoworks.fusionmonitor;

public final class Messaging {
  private Messaging() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface VectorOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required double x = 1;
    /**
     * <code>required double x = 1;</code>
     */
    boolean hasX();
    /**
     * <code>required double x = 1;</code>
     */
    double getX();

    // required double y = 2;
    /**
     * <code>required double y = 2;</code>
     */
    boolean hasY();
    /**
     * <code>required double y = 2;</code>
     */
    double getY();

    // required double z = 3;
    /**
     * <code>required double z = 3;</code>
     */
    boolean hasZ();
    /**
     * <code>required double z = 3;</code>
     */
    double getZ();
  }
  /**
   * Protobuf type {@code messaging.Vector}
   *
   * <pre>
   * A set of three double values (x, y, z).
   * </pre>
   */
  public static final class Vector extends
      com.google.protobuf.GeneratedMessageLite
      implements VectorOrBuilder {
    // Use Vector.newBuilder() to construct.
    private Vector(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Vector(boolean noInit) {}

    private static final Vector defaultInstance;
    public static Vector getDefaultInstance() {
      return defaultInstance;
    }

    public Vector getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Vector(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              x_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              y_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              z_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Vector> PARSER =
        new com.google.protobuf.AbstractParser<Vector>() {
      public Vector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vector(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Vector> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required double x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private double x_;
    /**
     * <code>required double x = 1;</code>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double x = 1;</code>
     */
    public double getX() {
      return x_;
    }

    // required double y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private double y_;
    /**
     * <code>required double y = 2;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double y = 2;</code>
     */
    public double getY() {
      return y_;
    }

    // required double z = 3;
    public static final int Z_FIELD_NUMBER = 3;
    private double z_;
    /**
     * <code>required double z = 3;</code>
     */
    public boolean hasZ() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double z = 3;</code>
     */
    public double getZ() {
      return z_;
    }

    private void initFields() {
      x_ = 0D;
      y_ = 0D;
      z_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, z_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, z_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.technoworks.fusionmonitor.Messaging.Vector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.fusionmonitor.Messaging.Vector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.Vector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.fusionmonitor.Messaging.Vector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.Vector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.Vector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.Vector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.Vector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.Vector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.Vector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.technoworks.fusionmonitor.Messaging.Vector prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code messaging.Vector}
     *
     * <pre>
     * A set of three double values (x, y, z).
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.technoworks.fusionmonitor.Messaging.Vector, Builder>
        implements com.technoworks.fusionmonitor.Messaging.VectorOrBuilder {
      // Construct using com.technoworks.fusionmonitor.Messaging.Vector.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        z_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.technoworks.fusionmonitor.Messaging.Vector getDefaultInstanceForType() {
        return com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance();
      }

      public com.technoworks.fusionmonitor.Messaging.Vector build() {
        com.technoworks.fusionmonitor.Messaging.Vector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.technoworks.fusionmonitor.Messaging.Vector buildPartial() {
        com.technoworks.fusionmonitor.Messaging.Vector result = new com.technoworks.fusionmonitor.Messaging.Vector(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.z_ = z_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.technoworks.fusionmonitor.Messaging.Vector other) {
        if (other == com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (!hasZ()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.technoworks.fusionmonitor.Messaging.Vector parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.technoworks.fusionmonitor.Messaging.Vector) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required double x = 1;
      private double x_ ;
      /**
       * <code>required double x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double x = 1;</code>
       */
      public double getX() {
        return x_;
      }
      /**
       * <code>required double x = 1;</code>
       */
      public Builder setX(double value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        
        return this;
      }
      /**
       * <code>required double x = 1;</code>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0D;
        
        return this;
      }

      // required double y = 2;
      private double y_ ;
      /**
       * <code>required double y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double y = 2;</code>
       */
      public double getY() {
        return y_;
      }
      /**
       * <code>required double y = 2;</code>
       */
      public Builder setY(double value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        
        return this;
      }
      /**
       * <code>required double y = 2;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0D;
        
        return this;
      }

      // required double z = 3;
      private double z_ ;
      /**
       * <code>required double z = 3;</code>
       */
      public boolean hasZ() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double z = 3;</code>
       */
      public double getZ() {
        return z_;
      }
      /**
       * <code>required double z = 3;</code>
       */
      public Builder setZ(double value) {
        bitField0_ |= 0x00000004;
        z_ = value;
        
        return this;
      }
      /**
       * <code>required double z = 3;</code>
       */
      public Builder clearZ() {
        bitField0_ = (bitField0_ & ~0x00000004);
        z_ = 0D;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:messaging.Vector)
    }

    static {
      defaultInstance = new Vector(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:messaging.Vector)
  }

  public interface PIDValuesOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required double p = 1;
    /**
     * <code>required double p = 1;</code>
     */
    boolean hasP();
    /**
     * <code>required double p = 1;</code>
     */
    double getP();

    // required double i = 2;
    /**
     * <code>required double i = 2;</code>
     */
    boolean hasI();
    /**
     * <code>required double i = 2;</code>
     */
    double getI();

    // required double d = 3;
    /**
     * <code>required double d = 3;</code>
     */
    boolean hasD();
    /**
     * <code>required double d = 3;</code>
     */
    double getD();
  }
  /**
   * Protobuf type {@code messaging.PIDValues}
   *
   * <pre>
   * A set of three double values (p, i, d).
   * </pre>
   */
  public static final class PIDValues extends
      com.google.protobuf.GeneratedMessageLite
      implements PIDValuesOrBuilder {
    // Use PIDValues.newBuilder() to construct.
    private PIDValues(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private PIDValues(boolean noInit) {}

    private static final PIDValues defaultInstance;
    public static PIDValues getDefaultInstance() {
      return defaultInstance;
    }

    public PIDValues getDefaultInstanceForType() {
      return defaultInstance;
    }

    private PIDValues(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              p_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              i_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              d_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<PIDValues> PARSER =
        new com.google.protobuf.AbstractParser<PIDValues>() {
      public PIDValues parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PIDValues(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PIDValues> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required double p = 1;
    public static final int P_FIELD_NUMBER = 1;
    private double p_;
    /**
     * <code>required double p = 1;</code>
     */
    public boolean hasP() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double p = 1;</code>
     */
    public double getP() {
      return p_;
    }

    // required double i = 2;
    public static final int I_FIELD_NUMBER = 2;
    private double i_;
    /**
     * <code>required double i = 2;</code>
     */
    public boolean hasI() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double i = 2;</code>
     */
    public double getI() {
      return i_;
    }

    // required double d = 3;
    public static final int D_FIELD_NUMBER = 3;
    private double d_;
    /**
     * <code>required double d = 3;</code>
     */
    public boolean hasD() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double d = 3;</code>
     */
    public double getD() {
      return d_;
    }

    private void initFields() {
      p_ = 0D;
      i_ = 0D;
      d_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasP()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasI()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasD()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, p_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, i_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, d_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, p_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, i_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, d_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.technoworks.fusionmonitor.Messaging.PIDValues parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDValues parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDValues parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDValues parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDValues parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDValues parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDValues parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDValues parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDValues parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDValues parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.technoworks.fusionmonitor.Messaging.PIDValues prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code messaging.PIDValues}
     *
     * <pre>
     * A set of three double values (p, i, d).
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.technoworks.fusionmonitor.Messaging.PIDValues, Builder>
        implements com.technoworks.fusionmonitor.Messaging.PIDValuesOrBuilder {
      // Construct using com.technoworks.fusionmonitor.Messaging.PIDValues.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        p_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        i_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        d_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.technoworks.fusionmonitor.Messaging.PIDValues getDefaultInstanceForType() {
        return com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
      }

      public com.technoworks.fusionmonitor.Messaging.PIDValues build() {
        com.technoworks.fusionmonitor.Messaging.PIDValues result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.technoworks.fusionmonitor.Messaging.PIDValues buildPartial() {
        com.technoworks.fusionmonitor.Messaging.PIDValues result = new com.technoworks.fusionmonitor.Messaging.PIDValues(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.p_ = p_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.i_ = i_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.d_ = d_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.technoworks.fusionmonitor.Messaging.PIDValues other) {
        if (other == com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance()) return this;
        if (other.hasP()) {
          setP(other.getP());
        }
        if (other.hasI()) {
          setI(other.getI());
        }
        if (other.hasD()) {
          setD(other.getD());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasP()) {
          
          return false;
        }
        if (!hasI()) {
          
          return false;
        }
        if (!hasD()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.technoworks.fusionmonitor.Messaging.PIDValues parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.technoworks.fusionmonitor.Messaging.PIDValues) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required double p = 1;
      private double p_ ;
      /**
       * <code>required double p = 1;</code>
       */
      public boolean hasP() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double p = 1;</code>
       */
      public double getP() {
        return p_;
      }
      /**
       * <code>required double p = 1;</code>
       */
      public Builder setP(double value) {
        bitField0_ |= 0x00000001;
        p_ = value;
        
        return this;
      }
      /**
       * <code>required double p = 1;</code>
       */
      public Builder clearP() {
        bitField0_ = (bitField0_ & ~0x00000001);
        p_ = 0D;
        
        return this;
      }

      // required double i = 2;
      private double i_ ;
      /**
       * <code>required double i = 2;</code>
       */
      public boolean hasI() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double i = 2;</code>
       */
      public double getI() {
        return i_;
      }
      /**
       * <code>required double i = 2;</code>
       */
      public Builder setI(double value) {
        bitField0_ |= 0x00000002;
        i_ = value;
        
        return this;
      }
      /**
       * <code>required double i = 2;</code>
       */
      public Builder clearI() {
        bitField0_ = (bitField0_ & ~0x00000002);
        i_ = 0D;
        
        return this;
      }

      // required double d = 3;
      private double d_ ;
      /**
       * <code>required double d = 3;</code>
       */
      public boolean hasD() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double d = 3;</code>
       */
      public double getD() {
        return d_;
      }
      /**
       * <code>required double d = 3;</code>
       */
      public Builder setD(double value) {
        bitField0_ |= 0x00000004;
        d_ = value;
        
        return this;
      }
      /**
       * <code>required double d = 3;</code>
       */
      public Builder clearD() {
        bitField0_ = (bitField0_ & ~0x00000004);
        d_ = 0D;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:messaging.PIDValues)
    }

    static {
      defaultInstance = new PIDValues(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:messaging.PIDValues)
  }

  public interface PIDSettingsOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .messaging.PIDValues factors = 1;
    /**
     * <code>required .messaging.PIDValues factors = 1;</code>
     */
    boolean hasFactors();
    /**
     * <code>required .messaging.PIDValues factors = 1;</code>
     */
    com.technoworks.fusionmonitor.Messaging.PIDValues getFactors();

    // required .messaging.PIDValues min_max = 2;
    /**
     * <code>required .messaging.PIDValues min_max = 2;</code>
     */
    boolean hasMinMax();
    /**
     * <code>required .messaging.PIDValues min_max = 2;</code>
     */
    com.technoworks.fusionmonitor.Messaging.PIDValues getMinMax();
  }
  /**
   * Protobuf type {@code messaging.PIDSettings}
   *
   * <pre>
   * A set of pid data (factors and limit).
   * </pre>
   */
  public static final class PIDSettings extends
      com.google.protobuf.GeneratedMessageLite
      implements PIDSettingsOrBuilder {
    // Use PIDSettings.newBuilder() to construct.
    private PIDSettings(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private PIDSettings(boolean noInit) {}

    private static final PIDSettings defaultInstance;
    public static PIDSettings getDefaultInstance() {
      return defaultInstance;
    }

    public PIDSettings getDefaultInstanceForType() {
      return defaultInstance;
    }

    private PIDSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.technoworks.fusionmonitor.Messaging.PIDValues.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = factors_.toBuilder();
              }
              factors_ = input.readMessage(com.technoworks.fusionmonitor.Messaging.PIDValues.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(factors_);
                factors_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.technoworks.fusionmonitor.Messaging.PIDValues.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = minMax_.toBuilder();
              }
              minMax_ = input.readMessage(com.technoworks.fusionmonitor.Messaging.PIDValues.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(minMax_);
                minMax_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<PIDSettings> PARSER =
        new com.google.protobuf.AbstractParser<PIDSettings>() {
      public PIDSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PIDSettings(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PIDSettings> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .messaging.PIDValues factors = 1;
    public static final int FACTORS_FIELD_NUMBER = 1;
    private com.technoworks.fusionmonitor.Messaging.PIDValues factors_;
    /**
     * <code>required .messaging.PIDValues factors = 1;</code>
     */
    public boolean hasFactors() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .messaging.PIDValues factors = 1;</code>
     */
    public com.technoworks.fusionmonitor.Messaging.PIDValues getFactors() {
      return factors_;
    }

    // required .messaging.PIDValues min_max = 2;
    public static final int MIN_MAX_FIELD_NUMBER = 2;
    private com.technoworks.fusionmonitor.Messaging.PIDValues minMax_;
    /**
     * <code>required .messaging.PIDValues min_max = 2;</code>
     */
    public boolean hasMinMax() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .messaging.PIDValues min_max = 2;</code>
     */
    public com.technoworks.fusionmonitor.Messaging.PIDValues getMinMax() {
      return minMax_;
    }

    private void initFields() {
      factors_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
      minMax_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasFactors()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinMax()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getFactors().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getMinMax().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, factors_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, minMax_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, factors_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, minMax_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.technoworks.fusionmonitor.Messaging.PIDSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.PIDSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.technoworks.fusionmonitor.Messaging.PIDSettings prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code messaging.PIDSettings}
     *
     * <pre>
     * A set of pid data (factors and limit).
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.technoworks.fusionmonitor.Messaging.PIDSettings, Builder>
        implements com.technoworks.fusionmonitor.Messaging.PIDSettingsOrBuilder {
      // Construct using com.technoworks.fusionmonitor.Messaging.PIDSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        factors_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        minMax_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.technoworks.fusionmonitor.Messaging.PIDSettings getDefaultInstanceForType() {
        return com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance();
      }

      public com.technoworks.fusionmonitor.Messaging.PIDSettings build() {
        com.technoworks.fusionmonitor.Messaging.PIDSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.technoworks.fusionmonitor.Messaging.PIDSettings buildPartial() {
        com.technoworks.fusionmonitor.Messaging.PIDSettings result = new com.technoworks.fusionmonitor.Messaging.PIDSettings(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.factors_ = factors_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minMax_ = minMax_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.technoworks.fusionmonitor.Messaging.PIDSettings other) {
        if (other == com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance()) return this;
        if (other.hasFactors()) {
          mergeFactors(other.getFactors());
        }
        if (other.hasMinMax()) {
          mergeMinMax(other.getMinMax());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFactors()) {
          
          return false;
        }
        if (!hasMinMax()) {
          
          return false;
        }
        if (!getFactors().isInitialized()) {
          
          return false;
        }
        if (!getMinMax().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.technoworks.fusionmonitor.Messaging.PIDSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.technoworks.fusionmonitor.Messaging.PIDSettings) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .messaging.PIDValues factors = 1;
      private com.technoworks.fusionmonitor.Messaging.PIDValues factors_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
      /**
       * <code>required .messaging.PIDValues factors = 1;</code>
       */
      public boolean hasFactors() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .messaging.PIDValues factors = 1;</code>
       */
      public com.technoworks.fusionmonitor.Messaging.PIDValues getFactors() {
        return factors_;
      }
      /**
       * <code>required .messaging.PIDValues factors = 1;</code>
       */
      public Builder setFactors(com.technoworks.fusionmonitor.Messaging.PIDValues value) {
        if (value == null) {
          throw new NullPointerException();
        }
        factors_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues factors = 1;</code>
       */
      public Builder setFactors(
          com.technoworks.fusionmonitor.Messaging.PIDValues.Builder builderForValue) {
        factors_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues factors = 1;</code>
       */
      public Builder mergeFactors(com.technoworks.fusionmonitor.Messaging.PIDValues value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            factors_ != com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance()) {
          factors_ =
            com.technoworks.fusionmonitor.Messaging.PIDValues.newBuilder(factors_).mergeFrom(value).buildPartial();
        } else {
          factors_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues factors = 1;</code>
       */
      public Builder clearFactors() {
        factors_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // required .messaging.PIDValues min_max = 2;
      private com.technoworks.fusionmonitor.Messaging.PIDValues minMax_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
      /**
       * <code>required .messaging.PIDValues min_max = 2;</code>
       */
      public boolean hasMinMax() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .messaging.PIDValues min_max = 2;</code>
       */
      public com.technoworks.fusionmonitor.Messaging.PIDValues getMinMax() {
        return minMax_;
      }
      /**
       * <code>required .messaging.PIDValues min_max = 2;</code>
       */
      public Builder setMinMax(com.technoworks.fusionmonitor.Messaging.PIDValues value) {
        if (value == null) {
          throw new NullPointerException();
        }
        minMax_ = value;

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues min_max = 2;</code>
       */
      public Builder setMinMax(
          com.technoworks.fusionmonitor.Messaging.PIDValues.Builder builderForValue) {
        minMax_ = builderForValue.build();

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues min_max = 2;</code>
       */
      public Builder mergeMinMax(com.technoworks.fusionmonitor.Messaging.PIDValues value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            minMax_ != com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance()) {
          minMax_ =
            com.technoworks.fusionmonitor.Messaging.PIDValues.newBuilder(minMax_).mergeFrom(value).buildPartial();
        } else {
          minMax_ = value;
        }

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues min_max = 2;</code>
       */
      public Builder clearMinMax() {
        minMax_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:messaging.PIDSettings)
    }

    static {
      defaultInstance = new PIDSettings(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:messaging.PIDSettings)
  }

  public interface SettingsOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .messaging.Vector angle_offset = 1;
    /**
     * <code>required .messaging.Vector angle_offset = 1;</code>
     */
    boolean hasAngleOffset();
    /**
     * <code>required .messaging.Vector angle_offset = 1;</code>
     */
    com.technoworks.fusionmonitor.Messaging.Vector getAngleOffset();

    // required .messaging.PIDSettings pid_x = 2;
    /**
     * <code>required .messaging.PIDSettings pid_x = 2;</code>
     */
    boolean hasPidX();
    /**
     * <code>required .messaging.PIDSettings pid_x = 2;</code>
     */
    com.technoworks.fusionmonitor.Messaging.PIDSettings getPidX();

    // required .messaging.PIDSettings pid_y = 3;
    /**
     * <code>required .messaging.PIDSettings pid_y = 3;</code>
     */
    boolean hasPidY();
    /**
     * <code>required .messaging.PIDSettings pid_y = 3;</code>
     */
    com.technoworks.fusionmonitor.Messaging.PIDSettings getPidY();

    // required .messaging.PIDSettings pid_z = 4;
    /**
     * <code>required .messaging.PIDSettings pid_z = 4;</code>
     */
    boolean hasPidZ();
    /**
     * <code>required .messaging.PIDSettings pid_z = 4;</code>
     */
    com.technoworks.fusionmonitor.Messaging.PIDSettings getPidZ();
  }
  /**
   * Protobuf type {@code messaging.Settings}
   *
   * <pre>
   * Message sended from the PC to the copter.
   * </pre>
   */
  public static final class Settings extends
      com.google.protobuf.GeneratedMessageLite
      implements SettingsOrBuilder {
    // Use Settings.newBuilder() to construct.
    private Settings(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Settings(boolean noInit) {}

    private static final Settings defaultInstance;
    public static Settings getDefaultInstance() {
      return defaultInstance;
    }

    public Settings getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Settings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.technoworks.fusionmonitor.Messaging.Vector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = angleOffset_.toBuilder();
              }
              angleOffset_ = input.readMessage(com.technoworks.fusionmonitor.Messaging.Vector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(angleOffset_);
                angleOffset_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.technoworks.fusionmonitor.Messaging.PIDSettings.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = pidX_.toBuilder();
              }
              pidX_ = input.readMessage(com.technoworks.fusionmonitor.Messaging.PIDSettings.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pidX_);
                pidX_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.technoworks.fusionmonitor.Messaging.PIDSettings.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = pidY_.toBuilder();
              }
              pidY_ = input.readMessage(com.technoworks.fusionmonitor.Messaging.PIDSettings.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pidY_);
                pidY_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              com.technoworks.fusionmonitor.Messaging.PIDSettings.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = pidZ_.toBuilder();
              }
              pidZ_ = input.readMessage(com.technoworks.fusionmonitor.Messaging.PIDSettings.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pidZ_);
                pidZ_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Settings> PARSER =
        new com.google.protobuf.AbstractParser<Settings>() {
      public Settings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Settings(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Settings> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .messaging.Vector angle_offset = 1;
    public static final int ANGLE_OFFSET_FIELD_NUMBER = 1;
    private com.technoworks.fusionmonitor.Messaging.Vector angleOffset_;
    /**
     * <code>required .messaging.Vector angle_offset = 1;</code>
     */
    public boolean hasAngleOffset() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .messaging.Vector angle_offset = 1;</code>
     */
    public com.technoworks.fusionmonitor.Messaging.Vector getAngleOffset() {
      return angleOffset_;
    }

    // required .messaging.PIDSettings pid_x = 2;
    public static final int PID_X_FIELD_NUMBER = 2;
    private com.technoworks.fusionmonitor.Messaging.PIDSettings pidX_;
    /**
     * <code>required .messaging.PIDSettings pid_x = 2;</code>
     */
    public boolean hasPidX() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .messaging.PIDSettings pid_x = 2;</code>
     */
    public com.technoworks.fusionmonitor.Messaging.PIDSettings getPidX() {
      return pidX_;
    }

    // required .messaging.PIDSettings pid_y = 3;
    public static final int PID_Y_FIELD_NUMBER = 3;
    private com.technoworks.fusionmonitor.Messaging.PIDSettings pidY_;
    /**
     * <code>required .messaging.PIDSettings pid_y = 3;</code>
     */
    public boolean hasPidY() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .messaging.PIDSettings pid_y = 3;</code>
     */
    public com.technoworks.fusionmonitor.Messaging.PIDSettings getPidY() {
      return pidY_;
    }

    // required .messaging.PIDSettings pid_z = 4;
    public static final int PID_Z_FIELD_NUMBER = 4;
    private com.technoworks.fusionmonitor.Messaging.PIDSettings pidZ_;
    /**
     * <code>required .messaging.PIDSettings pid_z = 4;</code>
     */
    public boolean hasPidZ() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .messaging.PIDSettings pid_z = 4;</code>
     */
    public com.technoworks.fusionmonitor.Messaging.PIDSettings getPidZ() {
      return pidZ_;
    }

    private void initFields() {
      angleOffset_ = com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance();
      pidX_ = com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance();
      pidY_ = com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance();
      pidZ_ = com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAngleOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPidX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPidY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPidZ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getAngleOffset().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPidX().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPidY().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPidZ().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, angleOffset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, pidX_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, pidY_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, pidZ_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, angleOffset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, pidX_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, pidY_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, pidZ_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.technoworks.fusionmonitor.Messaging.Settings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.fusionmonitor.Messaging.Settings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.Settings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.fusionmonitor.Messaging.Settings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.Settings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.Settings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.Settings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.Settings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.Settings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.Settings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.technoworks.fusionmonitor.Messaging.Settings prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code messaging.Settings}
     *
     * <pre>
     * Message sended from the PC to the copter.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.technoworks.fusionmonitor.Messaging.Settings, Builder>
        implements com.technoworks.fusionmonitor.Messaging.SettingsOrBuilder {
      // Construct using com.technoworks.fusionmonitor.Messaging.Settings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        angleOffset_ = com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        pidX_ = com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        pidY_ = com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        pidZ_ = com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.technoworks.fusionmonitor.Messaging.Settings getDefaultInstanceForType() {
        return com.technoworks.fusionmonitor.Messaging.Settings.getDefaultInstance();
      }

      public com.technoworks.fusionmonitor.Messaging.Settings build() {
        com.technoworks.fusionmonitor.Messaging.Settings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.technoworks.fusionmonitor.Messaging.Settings buildPartial() {
        com.technoworks.fusionmonitor.Messaging.Settings result = new com.technoworks.fusionmonitor.Messaging.Settings(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.angleOffset_ = angleOffset_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pidX_ = pidX_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pidY_ = pidY_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pidZ_ = pidZ_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.technoworks.fusionmonitor.Messaging.Settings other) {
        if (other == com.technoworks.fusionmonitor.Messaging.Settings.getDefaultInstance()) return this;
        if (other.hasAngleOffset()) {
          mergeAngleOffset(other.getAngleOffset());
        }
        if (other.hasPidX()) {
          mergePidX(other.getPidX());
        }
        if (other.hasPidY()) {
          mergePidY(other.getPidY());
        }
        if (other.hasPidZ()) {
          mergePidZ(other.getPidZ());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAngleOffset()) {
          
          return false;
        }
        if (!hasPidX()) {
          
          return false;
        }
        if (!hasPidY()) {
          
          return false;
        }
        if (!hasPidZ()) {
          
          return false;
        }
        if (!getAngleOffset().isInitialized()) {
          
          return false;
        }
        if (!getPidX().isInitialized()) {
          
          return false;
        }
        if (!getPidY().isInitialized()) {
          
          return false;
        }
        if (!getPidZ().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.technoworks.fusionmonitor.Messaging.Settings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.technoworks.fusionmonitor.Messaging.Settings) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .messaging.Vector angle_offset = 1;
      private com.technoworks.fusionmonitor.Messaging.Vector angleOffset_ = com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance();
      /**
       * <code>required .messaging.Vector angle_offset = 1;</code>
       */
      public boolean hasAngleOffset() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .messaging.Vector angle_offset = 1;</code>
       */
      public com.technoworks.fusionmonitor.Messaging.Vector getAngleOffset() {
        return angleOffset_;
      }
      /**
       * <code>required .messaging.Vector angle_offset = 1;</code>
       */
      public Builder setAngleOffset(com.technoworks.fusionmonitor.Messaging.Vector value) {
        if (value == null) {
          throw new NullPointerException();
        }
        angleOffset_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .messaging.Vector angle_offset = 1;</code>
       */
      public Builder setAngleOffset(
          com.technoworks.fusionmonitor.Messaging.Vector.Builder builderForValue) {
        angleOffset_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .messaging.Vector angle_offset = 1;</code>
       */
      public Builder mergeAngleOffset(com.technoworks.fusionmonitor.Messaging.Vector value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            angleOffset_ != com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance()) {
          angleOffset_ =
            com.technoworks.fusionmonitor.Messaging.Vector.newBuilder(angleOffset_).mergeFrom(value).buildPartial();
        } else {
          angleOffset_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .messaging.Vector angle_offset = 1;</code>
       */
      public Builder clearAngleOffset() {
        angleOffset_ = com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // required .messaging.PIDSettings pid_x = 2;
      private com.technoworks.fusionmonitor.Messaging.PIDSettings pidX_ = com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance();
      /**
       * <code>required .messaging.PIDSettings pid_x = 2;</code>
       */
      public boolean hasPidX() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .messaging.PIDSettings pid_x = 2;</code>
       */
      public com.technoworks.fusionmonitor.Messaging.PIDSettings getPidX() {
        return pidX_;
      }
      /**
       * <code>required .messaging.PIDSettings pid_x = 2;</code>
       */
      public Builder setPidX(com.technoworks.fusionmonitor.Messaging.PIDSettings value) {
        if (value == null) {
          throw new NullPointerException();
        }
        pidX_ = value;

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .messaging.PIDSettings pid_x = 2;</code>
       */
      public Builder setPidX(
          com.technoworks.fusionmonitor.Messaging.PIDSettings.Builder builderForValue) {
        pidX_ = builderForValue.build();

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .messaging.PIDSettings pid_x = 2;</code>
       */
      public Builder mergePidX(com.technoworks.fusionmonitor.Messaging.PIDSettings value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            pidX_ != com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance()) {
          pidX_ =
            com.technoworks.fusionmonitor.Messaging.PIDSettings.newBuilder(pidX_).mergeFrom(value).buildPartial();
        } else {
          pidX_ = value;
        }

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .messaging.PIDSettings pid_x = 2;</code>
       */
      public Builder clearPidX() {
        pidX_ = com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      // required .messaging.PIDSettings pid_y = 3;
      private com.technoworks.fusionmonitor.Messaging.PIDSettings pidY_ = com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance();
      /**
       * <code>required .messaging.PIDSettings pid_y = 3;</code>
       */
      public boolean hasPidY() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .messaging.PIDSettings pid_y = 3;</code>
       */
      public com.technoworks.fusionmonitor.Messaging.PIDSettings getPidY() {
        return pidY_;
      }
      /**
       * <code>required .messaging.PIDSettings pid_y = 3;</code>
       */
      public Builder setPidY(com.technoworks.fusionmonitor.Messaging.PIDSettings value) {
        if (value == null) {
          throw new NullPointerException();
        }
        pidY_ = value;

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .messaging.PIDSettings pid_y = 3;</code>
       */
      public Builder setPidY(
          com.technoworks.fusionmonitor.Messaging.PIDSettings.Builder builderForValue) {
        pidY_ = builderForValue.build();

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .messaging.PIDSettings pid_y = 3;</code>
       */
      public Builder mergePidY(com.technoworks.fusionmonitor.Messaging.PIDSettings value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            pidY_ != com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance()) {
          pidY_ =
            com.technoworks.fusionmonitor.Messaging.PIDSettings.newBuilder(pidY_).mergeFrom(value).buildPartial();
        } else {
          pidY_ = value;
        }

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .messaging.PIDSettings pid_y = 3;</code>
       */
      public Builder clearPidY() {
        pidY_ = com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      // required .messaging.PIDSettings pid_z = 4;
      private com.technoworks.fusionmonitor.Messaging.PIDSettings pidZ_ = com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance();
      /**
       * <code>required .messaging.PIDSettings pid_z = 4;</code>
       */
      public boolean hasPidZ() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .messaging.PIDSettings pid_z = 4;</code>
       */
      public com.technoworks.fusionmonitor.Messaging.PIDSettings getPidZ() {
        return pidZ_;
      }
      /**
       * <code>required .messaging.PIDSettings pid_z = 4;</code>
       */
      public Builder setPidZ(com.technoworks.fusionmonitor.Messaging.PIDSettings value) {
        if (value == null) {
          throw new NullPointerException();
        }
        pidZ_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .messaging.PIDSettings pid_z = 4;</code>
       */
      public Builder setPidZ(
          com.technoworks.fusionmonitor.Messaging.PIDSettings.Builder builderForValue) {
        pidZ_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .messaging.PIDSettings pid_z = 4;</code>
       */
      public Builder mergePidZ(com.technoworks.fusionmonitor.Messaging.PIDSettings value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            pidZ_ != com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance()) {
          pidZ_ =
            com.technoworks.fusionmonitor.Messaging.PIDSettings.newBuilder(pidZ_).mergeFrom(value).buildPartial();
        } else {
          pidZ_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .messaging.PIDSettings pid_z = 4;</code>
       */
      public Builder clearPidZ() {
        pidZ_ = com.technoworks.fusionmonitor.Messaging.PIDSettings.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:messaging.Settings)
    }

    static {
      defaultInstance = new Settings(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:messaging.Settings)
  }

  public interface TelemetryOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .messaging.Vector torques = 1;
    /**
     * <code>required .messaging.Vector torques = 1;</code>
     */
    boolean hasTorques();
    /**
     * <code>required .messaging.Vector torques = 1;</code>
     */
    com.technoworks.fusionmonitor.Messaging.Vector getTorques();

    // required .messaging.Vector angular_velocity = 2;
    /**
     * <code>required .messaging.Vector angular_velocity = 2;</code>
     */
    boolean hasAngularVelocity();
    /**
     * <code>required .messaging.Vector angular_velocity = 2;</code>
     */
    com.technoworks.fusionmonitor.Messaging.Vector getAngularVelocity();

    // required .messaging.PIDValues pid_x = 3;
    /**
     * <code>required .messaging.PIDValues pid_x = 3;</code>
     */
    boolean hasPidX();
    /**
     * <code>required .messaging.PIDValues pid_x = 3;</code>
     */
    com.technoworks.fusionmonitor.Messaging.PIDValues getPidX();

    // required .messaging.PIDValues pid_y = 4;
    /**
     * <code>required .messaging.PIDValues pid_y = 4;</code>
     */
    boolean hasPidY();
    /**
     * <code>required .messaging.PIDValues pid_y = 4;</code>
     */
    com.technoworks.fusionmonitor.Messaging.PIDValues getPidY();

    // required .messaging.PIDValues pid_z = 5;
    /**
     * <code>required .messaging.PIDValues pid_z = 5;</code>
     */
    boolean hasPidZ();
    /**
     * <code>required .messaging.PIDValues pid_z = 5;</code>
     */
    com.technoworks.fusionmonitor.Messaging.PIDValues getPidZ();

    // required double heading = 6;
    /**
     * <code>required double heading = 6;</code>
     */
    boolean hasHeading();
    /**
     * <code>required double heading = 6;</code>
     */
    double getHeading();

    // required double control_heading = 7;
    /**
     * <code>required double control_heading = 7;</code>
     */
    boolean hasControlHeading();
    /**
     * <code>required double control_heading = 7;</code>
     */
    double getControlHeading();

    // required double force = 8;
    /**
     * <code>required double force = 8;</code>
     */
    boolean hasForce();
    /**
     * <code>required double force = 8;</code>
     */
    double getForce();

    // required double correction_x = 9;
    /**
     * <code>required double correction_x = 9;</code>
     */
    boolean hasCorrectionX();
    /**
     * <code>required double correction_x = 9;</code>
     */
    double getCorrectionX();

    // required double correction_y = 10;
    /**
     * <code>required double correction_y = 10;</code>
     */
    boolean hasCorrectionY();
    /**
     * <code>required double correction_y = 10;</code>
     */
    double getCorrectionY();
  }
  /**
   * Protobuf type {@code messaging.Telemetry}
   *
   * <pre>
   * Message sended from the Copter to the PC.
   * </pre>
   */
  public static final class Telemetry extends
      com.google.protobuf.GeneratedMessageLite
      implements TelemetryOrBuilder {
    // Use Telemetry.newBuilder() to construct.
    private Telemetry(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Telemetry(boolean noInit) {}

    private static final Telemetry defaultInstance;
    public static Telemetry getDefaultInstance() {
      return defaultInstance;
    }

    public Telemetry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Telemetry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.technoworks.fusionmonitor.Messaging.Vector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = torques_.toBuilder();
              }
              torques_ = input.readMessage(com.technoworks.fusionmonitor.Messaging.Vector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(torques_);
                torques_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.technoworks.fusionmonitor.Messaging.Vector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = angularVelocity_.toBuilder();
              }
              angularVelocity_ = input.readMessage(com.technoworks.fusionmonitor.Messaging.Vector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(angularVelocity_);
                angularVelocity_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.technoworks.fusionmonitor.Messaging.PIDValues.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = pidX_.toBuilder();
              }
              pidX_ = input.readMessage(com.technoworks.fusionmonitor.Messaging.PIDValues.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pidX_);
                pidX_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              com.technoworks.fusionmonitor.Messaging.PIDValues.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = pidY_.toBuilder();
              }
              pidY_ = input.readMessage(com.technoworks.fusionmonitor.Messaging.PIDValues.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pidY_);
                pidY_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.technoworks.fusionmonitor.Messaging.PIDValues.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = pidZ_.toBuilder();
              }
              pidZ_ = input.readMessage(com.technoworks.fusionmonitor.Messaging.PIDValues.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pidZ_);
                pidZ_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              heading_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              controlHeading_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              force_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              correctionX_ = input.readDouble();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              correctionY_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Telemetry> PARSER =
        new com.google.protobuf.AbstractParser<Telemetry>() {
      public Telemetry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Telemetry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Telemetry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .messaging.Vector torques = 1;
    public static final int TORQUES_FIELD_NUMBER = 1;
    private com.technoworks.fusionmonitor.Messaging.Vector torques_;
    /**
     * <code>required .messaging.Vector torques = 1;</code>
     */
    public boolean hasTorques() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .messaging.Vector torques = 1;</code>
     */
    public com.technoworks.fusionmonitor.Messaging.Vector getTorques() {
      return torques_;
    }

    // required .messaging.Vector angular_velocity = 2;
    public static final int ANGULAR_VELOCITY_FIELD_NUMBER = 2;
    private com.technoworks.fusionmonitor.Messaging.Vector angularVelocity_;
    /**
     * <code>required .messaging.Vector angular_velocity = 2;</code>
     */
    public boolean hasAngularVelocity() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .messaging.Vector angular_velocity = 2;</code>
     */
    public com.technoworks.fusionmonitor.Messaging.Vector getAngularVelocity() {
      return angularVelocity_;
    }

    // required .messaging.PIDValues pid_x = 3;
    public static final int PID_X_FIELD_NUMBER = 3;
    private com.technoworks.fusionmonitor.Messaging.PIDValues pidX_;
    /**
     * <code>required .messaging.PIDValues pid_x = 3;</code>
     */
    public boolean hasPidX() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .messaging.PIDValues pid_x = 3;</code>
     */
    public com.technoworks.fusionmonitor.Messaging.PIDValues getPidX() {
      return pidX_;
    }

    // required .messaging.PIDValues pid_y = 4;
    public static final int PID_Y_FIELD_NUMBER = 4;
    private com.technoworks.fusionmonitor.Messaging.PIDValues pidY_;
    /**
     * <code>required .messaging.PIDValues pid_y = 4;</code>
     */
    public boolean hasPidY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .messaging.PIDValues pid_y = 4;</code>
     */
    public com.technoworks.fusionmonitor.Messaging.PIDValues getPidY() {
      return pidY_;
    }

    // required .messaging.PIDValues pid_z = 5;
    public static final int PID_Z_FIELD_NUMBER = 5;
    private com.technoworks.fusionmonitor.Messaging.PIDValues pidZ_;
    /**
     * <code>required .messaging.PIDValues pid_z = 5;</code>
     */
    public boolean hasPidZ() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .messaging.PIDValues pid_z = 5;</code>
     */
    public com.technoworks.fusionmonitor.Messaging.PIDValues getPidZ() {
      return pidZ_;
    }

    // required double heading = 6;
    public static final int HEADING_FIELD_NUMBER = 6;
    private double heading_;
    /**
     * <code>required double heading = 6;</code>
     */
    public boolean hasHeading() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required double heading = 6;</code>
     */
    public double getHeading() {
      return heading_;
    }

    // required double control_heading = 7;
    public static final int CONTROL_HEADING_FIELD_NUMBER = 7;
    private double controlHeading_;
    /**
     * <code>required double control_heading = 7;</code>
     */
    public boolean hasControlHeading() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required double control_heading = 7;</code>
     */
    public double getControlHeading() {
      return controlHeading_;
    }

    // required double force = 8;
    public static final int FORCE_FIELD_NUMBER = 8;
    private double force_;
    /**
     * <code>required double force = 8;</code>
     */
    public boolean hasForce() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required double force = 8;</code>
     */
    public double getForce() {
      return force_;
    }

    // required double correction_x = 9;
    public static final int CORRECTION_X_FIELD_NUMBER = 9;
    private double correctionX_;
    /**
     * <code>required double correction_x = 9;</code>
     */
    public boolean hasCorrectionX() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required double correction_x = 9;</code>
     */
    public double getCorrectionX() {
      return correctionX_;
    }

    // required double correction_y = 10;
    public static final int CORRECTION_Y_FIELD_NUMBER = 10;
    private double correctionY_;
    /**
     * <code>required double correction_y = 10;</code>
     */
    public boolean hasCorrectionY() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required double correction_y = 10;</code>
     */
    public double getCorrectionY() {
      return correctionY_;
    }

    private void initFields() {
      torques_ = com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance();
      angularVelocity_ = com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance();
      pidX_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
      pidY_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
      pidZ_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
      heading_ = 0D;
      controlHeading_ = 0D;
      force_ = 0D;
      correctionX_ = 0D;
      correctionY_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTorques()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAngularVelocity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPidX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPidY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPidZ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeading()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasControlHeading()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasForce()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCorrectionX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCorrectionY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getTorques().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getAngularVelocity().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPidX().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPidY().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPidZ().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, torques_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, angularVelocity_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, pidX_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, pidY_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, pidZ_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, heading_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, controlHeading_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, force_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, correctionX_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, correctionY_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, torques_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, angularVelocity_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, pidX_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, pidY_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, pidZ_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, heading_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, controlHeading_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, force_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, correctionX_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, correctionY_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.technoworks.fusionmonitor.Messaging.Telemetry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.fusionmonitor.Messaging.Telemetry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.Telemetry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.technoworks.fusionmonitor.Messaging.Telemetry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.Telemetry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.Telemetry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.Telemetry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.Telemetry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.technoworks.fusionmonitor.Messaging.Telemetry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.technoworks.fusionmonitor.Messaging.Telemetry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.technoworks.fusionmonitor.Messaging.Telemetry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code messaging.Telemetry}
     *
     * <pre>
     * Message sended from the Copter to the PC.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.technoworks.fusionmonitor.Messaging.Telemetry, Builder>
        implements com.technoworks.fusionmonitor.Messaging.TelemetryOrBuilder {
      // Construct using com.technoworks.fusionmonitor.Messaging.Telemetry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        torques_ = com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        angularVelocity_ = com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        pidX_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        pidY_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        pidZ_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000010);
        heading_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        controlHeading_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        force_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        correctionX_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        correctionY_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.technoworks.fusionmonitor.Messaging.Telemetry getDefaultInstanceForType() {
        return com.technoworks.fusionmonitor.Messaging.Telemetry.getDefaultInstance();
      }

      public com.technoworks.fusionmonitor.Messaging.Telemetry build() {
        com.technoworks.fusionmonitor.Messaging.Telemetry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.technoworks.fusionmonitor.Messaging.Telemetry buildPartial() {
        com.technoworks.fusionmonitor.Messaging.Telemetry result = new com.technoworks.fusionmonitor.Messaging.Telemetry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.torques_ = torques_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.angularVelocity_ = angularVelocity_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pidX_ = pidX_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pidY_ = pidY_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.pidZ_ = pidZ_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.heading_ = heading_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.controlHeading_ = controlHeading_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.force_ = force_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.correctionX_ = correctionX_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.correctionY_ = correctionY_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.technoworks.fusionmonitor.Messaging.Telemetry other) {
        if (other == com.technoworks.fusionmonitor.Messaging.Telemetry.getDefaultInstance()) return this;
        if (other.hasTorques()) {
          mergeTorques(other.getTorques());
        }
        if (other.hasAngularVelocity()) {
          mergeAngularVelocity(other.getAngularVelocity());
        }
        if (other.hasPidX()) {
          mergePidX(other.getPidX());
        }
        if (other.hasPidY()) {
          mergePidY(other.getPidY());
        }
        if (other.hasPidZ()) {
          mergePidZ(other.getPidZ());
        }
        if (other.hasHeading()) {
          setHeading(other.getHeading());
        }
        if (other.hasControlHeading()) {
          setControlHeading(other.getControlHeading());
        }
        if (other.hasForce()) {
          setForce(other.getForce());
        }
        if (other.hasCorrectionX()) {
          setCorrectionX(other.getCorrectionX());
        }
        if (other.hasCorrectionY()) {
          setCorrectionY(other.getCorrectionY());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTorques()) {
          
          return false;
        }
        if (!hasAngularVelocity()) {
          
          return false;
        }
        if (!hasPidX()) {
          
          return false;
        }
        if (!hasPidY()) {
          
          return false;
        }
        if (!hasPidZ()) {
          
          return false;
        }
        if (!hasHeading()) {
          
          return false;
        }
        if (!hasControlHeading()) {
          
          return false;
        }
        if (!hasForce()) {
          
          return false;
        }
        if (!hasCorrectionX()) {
          
          return false;
        }
        if (!hasCorrectionY()) {
          
          return false;
        }
        if (!getTorques().isInitialized()) {
          
          return false;
        }
        if (!getAngularVelocity().isInitialized()) {
          
          return false;
        }
        if (!getPidX().isInitialized()) {
          
          return false;
        }
        if (!getPidY().isInitialized()) {
          
          return false;
        }
        if (!getPidZ().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.technoworks.fusionmonitor.Messaging.Telemetry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.technoworks.fusionmonitor.Messaging.Telemetry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .messaging.Vector torques = 1;
      private com.technoworks.fusionmonitor.Messaging.Vector torques_ = com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance();
      /**
       * <code>required .messaging.Vector torques = 1;</code>
       */
      public boolean hasTorques() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .messaging.Vector torques = 1;</code>
       */
      public com.technoworks.fusionmonitor.Messaging.Vector getTorques() {
        return torques_;
      }
      /**
       * <code>required .messaging.Vector torques = 1;</code>
       */
      public Builder setTorques(com.technoworks.fusionmonitor.Messaging.Vector value) {
        if (value == null) {
          throw new NullPointerException();
        }
        torques_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .messaging.Vector torques = 1;</code>
       */
      public Builder setTorques(
          com.technoworks.fusionmonitor.Messaging.Vector.Builder builderForValue) {
        torques_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .messaging.Vector torques = 1;</code>
       */
      public Builder mergeTorques(com.technoworks.fusionmonitor.Messaging.Vector value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            torques_ != com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance()) {
          torques_ =
            com.technoworks.fusionmonitor.Messaging.Vector.newBuilder(torques_).mergeFrom(value).buildPartial();
        } else {
          torques_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .messaging.Vector torques = 1;</code>
       */
      public Builder clearTorques() {
        torques_ = com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // required .messaging.Vector angular_velocity = 2;
      private com.technoworks.fusionmonitor.Messaging.Vector angularVelocity_ = com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance();
      /**
       * <code>required .messaging.Vector angular_velocity = 2;</code>
       */
      public boolean hasAngularVelocity() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .messaging.Vector angular_velocity = 2;</code>
       */
      public com.technoworks.fusionmonitor.Messaging.Vector getAngularVelocity() {
        return angularVelocity_;
      }
      /**
       * <code>required .messaging.Vector angular_velocity = 2;</code>
       */
      public Builder setAngularVelocity(com.technoworks.fusionmonitor.Messaging.Vector value) {
        if (value == null) {
          throw new NullPointerException();
        }
        angularVelocity_ = value;

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .messaging.Vector angular_velocity = 2;</code>
       */
      public Builder setAngularVelocity(
          com.technoworks.fusionmonitor.Messaging.Vector.Builder builderForValue) {
        angularVelocity_ = builderForValue.build();

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .messaging.Vector angular_velocity = 2;</code>
       */
      public Builder mergeAngularVelocity(com.technoworks.fusionmonitor.Messaging.Vector value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            angularVelocity_ != com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance()) {
          angularVelocity_ =
            com.technoworks.fusionmonitor.Messaging.Vector.newBuilder(angularVelocity_).mergeFrom(value).buildPartial();
        } else {
          angularVelocity_ = value;
        }

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .messaging.Vector angular_velocity = 2;</code>
       */
      public Builder clearAngularVelocity() {
        angularVelocity_ = com.technoworks.fusionmonitor.Messaging.Vector.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      // required .messaging.PIDValues pid_x = 3;
      private com.technoworks.fusionmonitor.Messaging.PIDValues pidX_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
      /**
       * <code>required .messaging.PIDValues pid_x = 3;</code>
       */
      public boolean hasPidX() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .messaging.PIDValues pid_x = 3;</code>
       */
      public com.technoworks.fusionmonitor.Messaging.PIDValues getPidX() {
        return pidX_;
      }
      /**
       * <code>required .messaging.PIDValues pid_x = 3;</code>
       */
      public Builder setPidX(com.technoworks.fusionmonitor.Messaging.PIDValues value) {
        if (value == null) {
          throw new NullPointerException();
        }
        pidX_ = value;

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues pid_x = 3;</code>
       */
      public Builder setPidX(
          com.technoworks.fusionmonitor.Messaging.PIDValues.Builder builderForValue) {
        pidX_ = builderForValue.build();

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues pid_x = 3;</code>
       */
      public Builder mergePidX(com.technoworks.fusionmonitor.Messaging.PIDValues value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            pidX_ != com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance()) {
          pidX_ =
            com.technoworks.fusionmonitor.Messaging.PIDValues.newBuilder(pidX_).mergeFrom(value).buildPartial();
        } else {
          pidX_ = value;
        }

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues pid_x = 3;</code>
       */
      public Builder clearPidX() {
        pidX_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      // required .messaging.PIDValues pid_y = 4;
      private com.technoworks.fusionmonitor.Messaging.PIDValues pidY_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
      /**
       * <code>required .messaging.PIDValues pid_y = 4;</code>
       */
      public boolean hasPidY() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .messaging.PIDValues pid_y = 4;</code>
       */
      public com.technoworks.fusionmonitor.Messaging.PIDValues getPidY() {
        return pidY_;
      }
      /**
       * <code>required .messaging.PIDValues pid_y = 4;</code>
       */
      public Builder setPidY(com.technoworks.fusionmonitor.Messaging.PIDValues value) {
        if (value == null) {
          throw new NullPointerException();
        }
        pidY_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues pid_y = 4;</code>
       */
      public Builder setPidY(
          com.technoworks.fusionmonitor.Messaging.PIDValues.Builder builderForValue) {
        pidY_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues pid_y = 4;</code>
       */
      public Builder mergePidY(com.technoworks.fusionmonitor.Messaging.PIDValues value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            pidY_ != com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance()) {
          pidY_ =
            com.technoworks.fusionmonitor.Messaging.PIDValues.newBuilder(pidY_).mergeFrom(value).buildPartial();
        } else {
          pidY_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues pid_y = 4;</code>
       */
      public Builder clearPidY() {
        pidY_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      // required .messaging.PIDValues pid_z = 5;
      private com.technoworks.fusionmonitor.Messaging.PIDValues pidZ_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();
      /**
       * <code>required .messaging.PIDValues pid_z = 5;</code>
       */
      public boolean hasPidZ() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .messaging.PIDValues pid_z = 5;</code>
       */
      public com.technoworks.fusionmonitor.Messaging.PIDValues getPidZ() {
        return pidZ_;
      }
      /**
       * <code>required .messaging.PIDValues pid_z = 5;</code>
       */
      public Builder setPidZ(com.technoworks.fusionmonitor.Messaging.PIDValues value) {
        if (value == null) {
          throw new NullPointerException();
        }
        pidZ_ = value;

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues pid_z = 5;</code>
       */
      public Builder setPidZ(
          com.technoworks.fusionmonitor.Messaging.PIDValues.Builder builderForValue) {
        pidZ_ = builderForValue.build();

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues pid_z = 5;</code>
       */
      public Builder mergePidZ(com.technoworks.fusionmonitor.Messaging.PIDValues value) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            pidZ_ != com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance()) {
          pidZ_ =
            com.technoworks.fusionmonitor.Messaging.PIDValues.newBuilder(pidZ_).mergeFrom(value).buildPartial();
        } else {
          pidZ_ = value;
        }

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .messaging.PIDValues pid_z = 5;</code>
       */
      public Builder clearPidZ() {
        pidZ_ = com.technoworks.fusionmonitor.Messaging.PIDValues.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      // required double heading = 6;
      private double heading_ ;
      /**
       * <code>required double heading = 6;</code>
       */
      public boolean hasHeading() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required double heading = 6;</code>
       */
      public double getHeading() {
        return heading_;
      }
      /**
       * <code>required double heading = 6;</code>
       */
      public Builder setHeading(double value) {
        bitField0_ |= 0x00000020;
        heading_ = value;
        
        return this;
      }
      /**
       * <code>required double heading = 6;</code>
       */
      public Builder clearHeading() {
        bitField0_ = (bitField0_ & ~0x00000020);
        heading_ = 0D;
        
        return this;
      }

      // required double control_heading = 7;
      private double controlHeading_ ;
      /**
       * <code>required double control_heading = 7;</code>
       */
      public boolean hasControlHeading() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required double control_heading = 7;</code>
       */
      public double getControlHeading() {
        return controlHeading_;
      }
      /**
       * <code>required double control_heading = 7;</code>
       */
      public Builder setControlHeading(double value) {
        bitField0_ |= 0x00000040;
        controlHeading_ = value;
        
        return this;
      }
      /**
       * <code>required double control_heading = 7;</code>
       */
      public Builder clearControlHeading() {
        bitField0_ = (bitField0_ & ~0x00000040);
        controlHeading_ = 0D;
        
        return this;
      }

      // required double force = 8;
      private double force_ ;
      /**
       * <code>required double force = 8;</code>
       */
      public boolean hasForce() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required double force = 8;</code>
       */
      public double getForce() {
        return force_;
      }
      /**
       * <code>required double force = 8;</code>
       */
      public Builder setForce(double value) {
        bitField0_ |= 0x00000080;
        force_ = value;
        
        return this;
      }
      /**
       * <code>required double force = 8;</code>
       */
      public Builder clearForce() {
        bitField0_ = (bitField0_ & ~0x00000080);
        force_ = 0D;
        
        return this;
      }

      // required double correction_x = 9;
      private double correctionX_ ;
      /**
       * <code>required double correction_x = 9;</code>
       */
      public boolean hasCorrectionX() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required double correction_x = 9;</code>
       */
      public double getCorrectionX() {
        return correctionX_;
      }
      /**
       * <code>required double correction_x = 9;</code>
       */
      public Builder setCorrectionX(double value) {
        bitField0_ |= 0x00000100;
        correctionX_ = value;
        
        return this;
      }
      /**
       * <code>required double correction_x = 9;</code>
       */
      public Builder clearCorrectionX() {
        bitField0_ = (bitField0_ & ~0x00000100);
        correctionX_ = 0D;
        
        return this;
      }

      // required double correction_y = 10;
      private double correctionY_ ;
      /**
       * <code>required double correction_y = 10;</code>
       */
      public boolean hasCorrectionY() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required double correction_y = 10;</code>
       */
      public double getCorrectionY() {
        return correctionY_;
      }
      /**
       * <code>required double correction_y = 10;</code>
       */
      public Builder setCorrectionY(double value) {
        bitField0_ |= 0x00000200;
        correctionY_ = value;
        
        return this;
      }
      /**
       * <code>required double correction_y = 10;</code>
       */
      public Builder clearCorrectionY() {
        bitField0_ = (bitField0_ & ~0x00000200);
        correctionY_ = 0D;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:messaging.Telemetry)
    }

    static {
      defaultInstance = new Telemetry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:messaging.Telemetry)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
